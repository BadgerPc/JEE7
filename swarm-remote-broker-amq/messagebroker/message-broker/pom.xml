<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>messagebroker</artifactId>
        <groupId>com.ericsson.techday</groupId>
        <version>1.0.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>message-broker</artifactId>
    <version>1.0.1-SNAPSHOT</version>
    <packaging>war</packaging>


    <properties>
        <!-- docker settings -->
        <docker.repo>dekstroza</docker.repo>
        <docker.base.image>openjdk:8-jre-alpine</docker.base.image>
        <host.port>8080</host.port>
        <!-- swarm settings -->
        <swarm.hollow>true</swarm.hollow>

    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven.war.plugin.version}</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.wildfly.swarm</groupId>
                <artifactId>wildfly-swarm-plugin</artifactId>
                <version>${wildfly.swarm.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>package</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <jvmArguments>
                                <jvmArgument>-Dswarm.project.stage.file=${project.build.directory}/env/devel/service-config.yml</jvmArgument>
                                <jvmArgument>-Djava.net.preferIPv4Stack=true</jvmArgument>
                            </jvmArguments>
                            <stdoutFile>target/stdout.log</stdoutFile>
                            <stderrFile>target/stderr.log</stderrFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <fractionDetectMode>force</fractionDetectMode>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <images>
                        <image>
                            <name>${docker.repo}/${project.artifactId}:${project.version}</name>
                            <run>
                                <ports>
                                    <port>${host.port}:${host.port}</port>
                                </ports>
                            </run>
                            <build>
                                <from>${docker.base.image}</from>
                                <ports>
                                    <port>${host.port}</port>
                                </ports>
                                <assembly>
                                    <basedir>/</basedir>
                                    <inline>
                                        <files>
                                            <file>
                                                <source>
                                                    ${project.build.directory}/${project.artifactId}-${project.version}-hollow-swarm.jar
                                                </source>
                                                <outputDirectory>/opt</outputDirectory>
                                            </file>
                                            <file>
                                                <source>${project.build.directory}/${project.artifactId}-${project.version}.war</source>
                                                <outputDirectory>/opt</outputDirectory>
                                            </file>
                                            <file>
                                                <source>${project.build.directory}/env/devel/service-config.yml</source>
                                                <outputDirectory>/etc/config/</outputDirectory>
                                            </file>
                                        </files>
                                    </inline>
                                </assembly>
                                <entryPoint>
                                    <shell>java -Dswarm.logging=DEBUG -Dswarm.bind.address=0.0.0.0 -Dswarm.project.stage.file=/etc/config/service-config.yml \
                                        -Djava.net.preferIPv4Stack=true -jar \
                                        /opt/${project.artifactId}-${project.version}-hollow-swarm.jar \
                                        /opt/${project.artifactId}-${project.version}.war
                                    </shell>
                                </entryPoint>
                            </build>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven.failsafe.plugin.version}</version>
                <configuration>
                    <includes>
                        <include>**/*IT.java</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/env</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
                <targetPath>${project.build.directory}/env</targetPath>
            </resource>
        </resources>
    </build>

    <dependencies>
        <!-- https://mvnrepository.com/artifact/org.wildfly.swarm/jolokia -->
        <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>jolokia</artifactId>
            <version>2017.8.1</version>
        </dependency>
        <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>messaging</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>cdi</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>remoting</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>management</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>jmx</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>connector</artifactId>
        </dependency>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <scope>provided</scope>
        </dependency>

    </dependencies>


</project>